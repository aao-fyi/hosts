stages:
  - build

variables:
  GIT_USER_NAME: "Commit Bot"
  GIT_USER_EMAIL: "bot@example.com"
  GIT_SSH_KEY: "SSH-Private-Key-Base64"
  GIT_REPO_URL: "ssh://git@gitlab.com/$CI_PROJECT_PATH.git"

build:
  stage: build
  before_script:
    # Configure git
    - git config user.name "$GIT_USER_NAME"
    - git config user.email "$GIT_USER_EMAIL"
    - git remote set-url origin "$GIT_REPO_URL"
    # Configure SSH
    - mkdir -p ~/.ssh
    - echo "$GIT_SSH_KEY" | base64 --decode > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    # Checkout
    - git checkout -b build
  script:
    # Find hosts files
    - hosts_files=($(find data -type f -name "*.txt" | sort))

    # Build each hosts file
    - |
      for hosts_file in "${hosts_files[@]}"; do
        service_path=$(dirname "$hosts_file")
        static_path="static/"${service_path#"data/"}


        service_name=$(basename "$hosts_file" .txt)

        mkdir -p "${static_path}"

        # Generate DNS block
        awk '{ printf "0.0.0.0 "; gsub("\\.", "\\\\&", $0); printf "(^\\\\(.+?\\\\.)?)?%s$", $0; printf "\n" }' "$hosts_file" > "${static_path}/${service_name}-block-dns.txt"

        # Generate UBO block
        awk '{ printf "||%s^\n", $0 }' "$hosts_file" > "${static_path}/${service_name}-block-ubo.txt"

        # Generate UBO allow
        awk '{ printf "@@||%s^\n", $0 }' "$hosts_file" > "${static_path}/${service_name}-allow-ubo.txt"

        # Calculate SHA-256 checksum
        for output_file in "${static_path}"/*.txt; do
          if [[ -f "$output_file" ]]; then
            sum_file="${output_file%.*}.sum"
            sha256sum "$output_file" | awk '{print $1}' > "$sum_file"
          fi
        done
      done
    # Commit changes
    - git add .
    - git commit -m "Build lists [skip ci]"
    # Push changes
    - git push origin build:main
